//List of all available animations
enum Player1_Anims {
    IDLE_ANIM,
    WALK_ANIM
}

//Switch the animation if necessary
void switch_player1_anim(Player1_Anims anim, bool force) {
    if force || (anim != player1.anim.anim_num) {
        player1.anim.anim_frame = 0
        player1.anim.frame_timer = 0
    }
    player1.anim.anim_num = byte(anim)
}

//Update the current animation
void handle_player_anim(pointer.Anim player_anim) {
    pointer anim_ptr
    
    if player_anim->anim_num == IDLE_ANIM {
        anim_ptr = player_idle_anim.addr
    }
    else if player_anim->anim_num == WALK_ANIM {
        anim_ptr = player_walk_anim.addr
    }
    
    handle_anim(anim_ptr, player_anim)
}

inline void handle_anim(pointer anim_ptr, pointer.Anim anim) {
    bool loop
    byte max_frame
    
    if anim_ptr[0] != 0 {
        loop = true
    }
    else {
        loop = false
    }
    max_frame = anim_ptr[1]
    anim_ptr += 2
    
    if anim->anim_frame > max_frame {
        if loop {
            anim->anim_frame = 0
        }
        else {
            anim->anim_frame = max_frame
        }
        anim->frame_timer = 0
    }

    draw_player_frame(anim_ptr[anim->anim_frame << 1], anim->mirroring)
    
    anim->frame_timer += 1
    if anim->frame_timer == anim_ptr[(anim->anim_frame << 1)+1]{
        anim->anim_frame += 1
        anim->frame_timer = 0
    }
}

//Draw the current frame of the current animation
inline void draw_player_frame(byte frame_num, bool mirroring) {
    if frame_num == 0 {
        sprite_draw_frame(player_idle_frame0.addr, mirroring)
    }
    else if frame_num == 1 {
        sprite_draw_frame(player_walk_frame0.addr, mirroring)
    }
    else if frame_num == 2 {
        sprite_draw_frame(player_walk_frame1.addr, mirroring)
    }
    else if frame_num == 3 {
        sprite_draw_frame(player_walk_frame2.addr, mirroring)
    }
    else if frame_num == 4 {
        sprite_draw_frame(player_walk_frame3.addr, mirroring)
    }
}

void sprite_draw_frame(pointer frame_info, bool mirroring) {
    //compiler bug: can't manipulate parameter directly,
    //  have to use local variable
    pointer frame
    byte mirror
    byte center
    byte num_sprites
    sbyte offset
    Sprite spr
    bool even
    
    even = true
    
    frame = frame_info
    mirror = frame[0]
    center = frame[1]
    num_sprites = frame[2]
    frame += 3
    
    //set proper mirroring
    
    if mirroring{
        mirror ^= 1
    }
    else {
        mirror ^= 0
    }
    
    while num_sprites > 0 {
        spr.y = player1.pos.y + frame[0]
        spr.tile = frame[1]
        spr.even = even
        
        if mirror == 0 {
            spr.attrs = frame[2] | %01000000
            spr.x = (player1.pos.x+center) - frame[3]
        }
        else {
            spr.attrs = frame[2]
            spr.x = player1.pos.x + frame[3]
        }
        
        frame += 4
        num_sprites -= 1
        add_sprite(spr)
        
        even = not(even)
    }
}

//Animation Info
const array player_idle_anim = [0,0, 0,0]
const array player_walk_anim = [1,3, 1,8, 2,8, 3,8, 4,8]

//Frame Info
const array player_idle_frame0 = [1,8,5, 0,0,0,-4,  0,1,0,4,  8,2,0,0,  8,3,0,8,  -3,$10,0,4]
const array player_walk_frame0 = [1,8,5, 0,4,0,-3,  0,5,0,5,  8,6,0,0,  8,7,0,8,  -3,$11,0,4]
const array player_walk_frame1 = [1,8,5, 0,4,0,-3,  0,5,0,5,  8,$0E,0,0,  8,$0F,0,8,  -3,$11,0,4]
const array player_walk_frame2 = [1,8,5, 0,4,0,-3,  0,5,0,5,  8,$0C,0,0,  8,$0D,0,8,  -3,$11,0,4]
const array player_walk_frame3 = [1,8,5, 0,4,0,-3,  0,5,0,5,  8,8,0,0,  8,9,0,8,  -3,$11,0,4]