//Draw the current frame of the current animation
void draw_player1_frame(byte frame_num) {
    return [frame_num] {
        0   @ player1_frame_1
        1   @ player1_frame_1
    }
}

void player1_draw_frame(pointer frame_info) {
    //compiler bug: can't manipulate parameter directly,
    //  have to use local variable
    pointer frame
    byte mirror
    byte center
    byte num_sprites
    sbyte offset
    Sprite spr
    
    frame = frame_info
    mirror = frame[0]
    center = frame[1]
    num_sprites = frame[2]
    frame += 3
    
    //set proper mirroring
    
    if player1.mirroring{
        mirror ^= 1
    }
    else {
        mirror ^= 0
    }
    
    while num_sprites > 0 {
        if mirror == 0{
            spr.y = player1.pos.y + frame[0]
            spr.tile = frame[1]
            spr.attrs = frame[2] | %01000000
            spr.x = (player1.pos.x+center) - frame[3]
            spr.even = true
        }
        else {
            spr.y = player1.pos.y + frame[0]
            spr.tile = frame[1]
            spr.attrs = frame[2]
            spr.x = player1.pos.x + frame[3]
            spr.even = true
        }
        
        frame += 4
        num_sprites -= 1
        add_sprite_to_queue(spr)
    }
}

const array frame0 = [1,8,5, 0,0,0,-4,  0,1,0,4,  8,2,0,0,  8,3,0,8,  -3,$10,0,4]

void player1_frame_1() {
    player1_draw_frame(frame0.addr)
}